{"version":3,"sources":["../src/log.test.ts"],"names":["DerivedState_1","require","InputState_1","log_1","StatesGroup_1","describe","it","enableReactiveStatesLogging","setLogger","states","_super","States","_this","call","this","name","input$","input","state2","derive","$","map","v","initializeMembers","__extends","StatesGroup","changes$","subscribe","logged","state","value","putValue","assert","include"],"mappings":"mZAAA,IAAAA,eAAAC,QAAA,kBACAC,aAAAD,QAAA,gBACAE,MAAAF,QAAA,SACAG,cAAAH,QAAA,iBAEAI,SAAS,MAAO,WAEZC,GAAG,sBAAuB,WACtBH,MAAAI,8BAEAJ,MAAAK,UAAU,cAGV,IAWMC,EAAS,IAXf,SAAAC,GAKI,SAAAC,IAAA,IAAAC,EACIF,EAAAG,KAAAC,OAAOA,YALXF,EAAAG,KAAO,SACPH,EAAAI,OAASd,aAAAe,QACTL,EAAAM,OAASlB,eAAAmB,OAAOP,EAAKI,OAAQ,SAAAI,GAAK,OAAAA,EAAEC,IAAI,SAAAC,GAAK,OAAAA,EAAI,QAI7CV,EAAKW,sBAEb,OATqBC,UAAAb,EAAAD,GASrBC,GATqBP,cAAAqB,cAYrBhB,EAAOS,OAAOQ,WAAWC,YAEzB,IAAIC,EAAS,GACbzB,MAAAK,UAAU,SAAAqB,GACND,GAAUC,EAAMd,KAAO,IAAMc,EAAMC,QAGvCrB,EAAOO,OAAOe,SAAS,GAEvBC,OAAOC,QAAQL,EAAQ,iBACvBI,OAAOC,QAAQL,EAAQ,MACvBI,OAAOC,QAAQL,EAAQ,iBACvBI,OAAOC,QAAQL,EAAQ","file":"log.test.js","sourcesContent":["import {derive} from \"./DerivedState\";\nimport {input} from \"./InputState\";\nimport {enableReactiveStatesLogging, setLogger} from \"./log\";\nimport {StatesGroup} from \"./StatesGroup\";\n\ndescribe(\"log\", function () {\n\n    it(\"log on state change\", function () {\n        enableReactiveStatesLogging();\n\n        setLogger(() => {\n        });\n\n        class States extends StatesGroup {\n            name = \"group1\";\n            input$ = input<number>();\n            state2 = derive(this.input$, $ => $.map(v => v + 1000));\n\n            constructor() {\n                super();\n                this.initializeMembers();\n            }\n        }\n\n        const states = new States();\n        states.state2.changes$().subscribe();\n\n        let logged = \"\";\n        setLogger(state => {\n            logged += state.name + \"=\" + state.value;\n        });\n\n        states.input$.putValue(1);\n\n        assert.include(logged, \"group1.input$\");\n        assert.include(logged, \"=1\");\n        assert.include(logged, \"group1.state2\");\n        assert.include(logged, \"=1001\");\n    });\n\n});\n"],"sourceRoot":"/"}