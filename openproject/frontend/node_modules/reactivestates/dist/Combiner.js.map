{"version":3,"sources":["../src/Combiner.ts"],"names":["combine","states","_i","arguments","length","CombinerState","rxjs_1","require","State_1","_super","input","Observable","combineLatest","map","o","changes$","args","isNonValue","x","undefined","x_1","afterConnect","afterDisConnect","call","this","__extends","State","exports"],"mappings":"aA+DA,SAAAA,cAAwB,IAAAC,KAAAC,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAD,EAAAC,GAAAC,UAAAD,GACpB,OAAO,IAAIG,cAAcJ,yYAhE7B,IAAAK,OAAAC,QAAA,QACAC,QAAAD,QAAA,WAEAF,cAAA,SAAAI,GAEI,SAAAJ,EAAYJ,GAAZ,IAEUS,EAAQJ,OAAAK,WAAWC,cACjBX,EAAOY,IAAI,SAAAC,GAAK,OAAAA,EAAEC,aAClB,eAAC,IAAAC,KAAAd,EAAA,EAAAA,EAAAC,UAAAC,OAAAF,IAAAc,EAAAd,GAAAC,UAAAD,GAAmB,OAAAc,IAGtBC,EAAa,SAACC,GAChB,QAAUC,IAAND,EACA,OAAO,EAGX,GAAiB,IAAbA,EAAEd,OACF,OAAO,EAGX,IAAc,IAAAF,EAAA,EAAAkB,EAAAF,EAAAhB,EAAAkB,EAAAhB,OAAAF,IACV,QAAUiB,IADJC,EAAAlB,GAEF,OAAO,EAGf,OAAO,GAGLmB,EAAe,aACfC,EAAkB,oBAExBb,EAAAc,KAAAC,KAAMd,EAAOO,EAAYI,EAAcC,IAAgBE,KAG/D,OAhC+EC,UAAApB,EAAAI,GAgC/EJ,GAhC+EG,QAAAkB,OAAlEC,QAAAtB,cAAAA,cA4DbsB,QAAA3B,QAAAA","file":"Combiner.js","sourcesContent":["import {Observable} from \"rxjs\";\nimport {State} from \"./State\";\n\nexport class CombinerState<T extends Array<any>, X extends Array<any>> extends State<T, X> {\n\n    constructor(states: State<any, any>[]) {\n        // input\n        const input = Observable.combineLatest(\n                states.map(o => o.changes$()),\n                (...args: any[]) => args);\n\n        // isNonValue\n        const isNonValue = (x: T|X): x is X => {\n            if (x === undefined) {\n                return true;\n            }\n\n            if (x.length === 0) {\n                return true;\n            }\n\n            for (let v of x) {\n                if (v === undefined) {\n                    return true;\n                }\n            }\n            return false;\n        };\n\n        const afterConnect = () => {};\n        const afterDisConnect = () => {};\n\n        super(input, isNonValue, afterConnect, afterDisConnect);\n    }\n\n}\n\n\nexport function combine<T1, T1X, T2, T2X>(state1: State<T1, T1X>,\n                                          state2: State<T2, T2X>): CombinerState<[T1, T2], [T1X, T2X]>;\n\nexport function combine<T1, T1X, T2, T2X, T3, T3X>(state1: State<T1, T1X>,\n                                                   state2: State<T2, T2X>,\n                                                   state3: State<T3, T3X>): CombinerState<[T1, T2, T3], [T1X, T2X, T3X]>;\n\nexport function combine<T1, T1X, T2, T2X, T3, T3X, T4, T4X>(state1: State<T1, T1X>,\n                                                            state2: State<T2, T2X>,\n                                                            state3: State<T3, T3X>,\n                                                            state4: State<T4, T4X>): CombinerState<[T1, T2, T3, T4], [T1X, T2X, T3X, T4X]>;\n\nexport function combine<T1, T1X, T2, T2X, T3, T3X, T4, T4X, T5, T5X>(state1: State<T1, T1X>,\n                                                                     state2: State<T2, T2X>,\n                                                                     state3: State<T3, T3X>,\n                                                                     state4: State<T4, T4X>,\n                                                                     state5: State<T5, T5X>): CombinerState<[T1, T2, T3, T4, T5], [T1X, T2X, T3X, T4X, T5X]>;\n\nexport function combine<T1, T1X, T2, T2X, T3, T3X, T4, T4X, T5, T5X, T6, T6X>(state1: State<T1, T1X>,\n                                                                              state2: State<T2, T2X>,\n                                                                              state3: State<T3, T3X>,\n                                                                              state4: State<T4, T4X>,\n                                                                              state5: State<T5, T5X>,\n                                                                              state6: State<T6, T6X>): CombinerState<[T1, T2, T3, T4, T5, T6], [T1X, T2X, T3X, T4X, T5X, T6X]>;\n\nexport function combine(...states: State<any, any>[]): CombinerState<any, any> {\n    return new CombinerState(states);\n}\n"],"sourceRoot":"/"}