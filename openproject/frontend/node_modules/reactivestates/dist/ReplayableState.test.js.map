{"version":3,"sources":["../src/ReplayableState.test.ts"],"names":["InputState_1","require","ReplayableState_1","describe","it","calls","input$","input","replayable$","replayable","changes$","subscribe","v","push","putValue","replay","assert","deepEqual"],"mappings":"oEAAA,IAAAA,aAAAC,QAAA,gBACAC,kBAAAD,QAAA,qBAEAE,SAAS,kBAAmB,WAExBC,GAAG,8BAA+B,WAC9B,IAAMC,KACFC,EAASN,aAAAO,MAAM,GACbC,EAAcN,kBAAAO,WAAWH,GAC/BE,EAAYE,WAAWC,UAAU,SAAAC,GAAK,OAAAP,EAAMQ,KAAKD,KAEjDN,EAAOQ,SAAS,GAChBN,EAAYO,SAEZC,OAAOC,UAAUZ,GAAQ,EAAG,EAAG","file":"ReplayableState.test.js","sourcesContent":["import {input} from \"./InputState\";\nimport {replayable} from \"./ReplayableState\";\n\ndescribe(\"ReplayableState\", function () {\n\n    it(\"can be used with InputState\", function () {\n        const calls: any[] = [];\n        let input$ = input(1);\n        const replayable$ = replayable(input$);\n        replayable$.changes$().subscribe(v => calls.push(v));\n\n        input$.putValue(2);\n        replayable$.replay();\n\n        assert.deepEqual(calls, [1, 2, 2]);\n    });\n\n});\n"],"sourceRoot":"/"}