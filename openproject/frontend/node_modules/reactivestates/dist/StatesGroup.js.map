{"version":3,"sources":["../src/StatesGroup.ts"],"names":["State_1","require","nextStoreId","StatesGroup","_this","this","storeId","name","members","autoInitMembers","setTimeout","initializeMembers","prototype","connectAll","forEach","m","connect","disconnectAll","disconnect","path","obj","propertyName","hasOwnProperty","member","State","push","exports"],"mappings":"oEACA,IAAAA,QAAAC,QAAA,WAEIC,YAAc,EAElBC,YAAA,WAUI,SAAAA,IAAA,IAAAC,EAAAC,KARSA,KAAAC,QAAUJ,cAEnBG,KAAAE,KAAO,SAAWF,KAAKC,QAEbD,KAAAG,QAAoC,KAEpCH,KAAAI,iBAAkB,EAGpBJ,KAAKI,iBACLC,WAAW,WAAM,OAAAN,EAAKO,qBAAqB,GAyCvD,OA/BIR,EAAAS,UAAAC,WAAA,WAGI,OAFAR,KAAKM,oBACLN,KAAKG,QAASM,QAAQ,SAAAC,GAAK,OAAAA,EAAEC,YACtBX,MAGXF,EAAAS,UAAAK,cAAA,WAGI,OAFAZ,KAAKM,oBACLN,KAAKG,QAASM,QAAQ,SAAAC,GAAK,OAAAA,EAAEG,eACtBb,MAGDF,EAAAS,UAAAD,kBAAV,SAA4BQ,EAAmBC,GAC3C,QADwB,IAAAD,IAAAA,EAAA,SAAmB,IAAAC,IAAAA,EAAAf,MACtB,OAAjBA,KAAKG,QAAT,CAGAH,KAAKG,WACL,IAAK,IAAMa,KAAgBD,EACvB,GAAIA,EAAIE,eAAeD,GAAe,CAClC,IAAME,EAASH,EAAIC,GAEfE,aAAkBvB,QAAAwB,OAClBD,EAAOhB,KAAOF,KAAKE,KAAOY,EAAO,IAAME,EACvChB,KAAKG,QAAQiB,KAAKF,IACO,iBAAXA,GACdlB,KAAKM,kBAAkBQ,EAAO,IAAME,EAAcE,MAMtEpB,KArDauB,QAAAvB,YAAAA","file":"StatesGroup.js","sourcesContent":["import {Injectable} from \"./Context\";\nimport {State} from \"./State\";\n\nlet nextStoreId = 0;\n\nexport class StatesGroup implements Injectable {\n\n    readonly storeId = nextStoreId++;\n\n    name = \"store-\" + this.storeId;\n\n    protected members: State<any, any>[] | null = null;\n\n    protected autoInitMembers = true;\n\n    constructor() {\n        if (this.autoInitMembers) {\n            setTimeout(() => this.initializeMembers(), 0);\n        }\n    }\n\n    // enableLog(enable: boolean): this {\n    //     this.initializeMembers();\n    //     this.members!.forEach(m => m.logEnabled = enable);\n    //     return this;\n    // }\n\n    connectAll(): this {\n        this.initializeMembers();\n        this.members!.forEach(m => m.connect());\n        return this;\n    }\n\n    disconnectAll(): this {\n        this.initializeMembers();\n        this.members!.forEach(m => m.disconnect());\n        return this;\n    }\n\n    protected initializeMembers(path: string = \"\", obj: any = this) {\n        if (this.members !== null) {\n            return;\n        }\n        this.members = [];\n        for (const propertyName in obj) {\n            if (obj.hasOwnProperty(propertyName)) {\n                const member = obj[propertyName];\n\n                if (member instanceof State) {\n                    member.name = this.name + path + \".\" + propertyName;\n                    this.members.push(member);\n                } else if (typeof member === \"object\") {\n                    this.initializeMembers(path + \".\" + propertyName, member);\n                }\n            }\n        }\n    }\n\n}\n"],"sourceRoot":"/"}